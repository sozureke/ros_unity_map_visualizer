//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.ArVisualisation
{
    [Serializable]
    public class MarkerDataMsg : Message
    {
        public const string k_RosMessageName = "ar_visualisation_msgs/MarkerData";
        public override string RosMessageName => k_RosMessageName;

        public int id;
        public int action;
        public int type;
        public Geometry.PointMsg position;
        public Geometry.Vector3Msg marker_scale;
        public Std.ColorRGBAMsg marker_color;
        public Geometry.PointMsg[] lines;
        public Geometry.Vector3Msg lines_scale;
        public Std.ColorRGBAMsg lines_color;

        public MarkerDataMsg()
        {
            this.id = 0;
            this.action = 0;
            this.type = 0;
            this.position = new Geometry.PointMsg();
            this.marker_scale = new Geometry.Vector3Msg();
            this.marker_color = new Std.ColorRGBAMsg();
            this.lines = new Geometry.PointMsg[0];
            this.lines_scale = new Geometry.Vector3Msg();
            this.lines_color = new Std.ColorRGBAMsg();
        }

        public MarkerDataMsg(int id, int action, int type, Geometry.PointMsg position, Geometry.Vector3Msg marker_scale, Std.ColorRGBAMsg marker_color, Geometry.PointMsg[] lines, Geometry.Vector3Msg lines_scale, Std.ColorRGBAMsg lines_color)
        {
            this.id = id;
            this.action = action;
            this.type = type;
            this.position = position;
            this.marker_scale = marker_scale;
            this.marker_color = marker_color;
            this.lines = lines;
            this.lines_scale = lines_scale;
            this.lines_color = lines_color;
        }

        public static MarkerDataMsg Deserialize(MessageDeserializer deserializer) => new MarkerDataMsg(deserializer);

        private MarkerDataMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.id);
            deserializer.Read(out this.action);
            deserializer.Read(out this.type);
            this.position = Geometry.PointMsg.Deserialize(deserializer);
            this.marker_scale = Geometry.Vector3Msg.Deserialize(deserializer);
            this.marker_color = Std.ColorRGBAMsg.Deserialize(deserializer);
            deserializer.Read(out this.lines, Geometry.PointMsg.Deserialize, deserializer.ReadLength());
            this.lines_scale = Geometry.Vector3Msg.Deserialize(deserializer);
            this.lines_color = Std.ColorRGBAMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.id);
            serializer.Write(this.action);
            serializer.Write(this.type);
            serializer.Write(this.position);
            serializer.Write(this.marker_scale);
            serializer.Write(this.marker_color);
            serializer.WriteLength(this.lines);
            serializer.Write(this.lines);
            serializer.Write(this.lines_scale);
            serializer.Write(this.lines_color);
        }

        public override string ToString()
        {
            return "MarkerDataMsg: " +
            "\nid: " + id.ToString() +
            "\naction: " + action.ToString() +
            "\ntype: " + type.ToString() +
            "\nposition: " + position.ToString() +
            "\nmarker_scale: " + marker_scale.ToString() +
            "\nmarker_color: " + marker_color.ToString() +
            "\nlines: " + System.String.Join(", ", lines.ToList()) +
            "\nlines_scale: " + lines_scale.ToString() +
            "\nlines_color: " + lines_color.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
